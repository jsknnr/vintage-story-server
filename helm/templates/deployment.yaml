apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ .Chart.Name }}"
  labels:
    app: "{{ .Chart.Name }}"
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
spec:
  strategy:
    type: Recreate
  replicas: 1
  selector:
    matchLabels:
      app: "{{ .Chart.Name }}"
      release: "{{ .Release.Name }}"
  template:
    metadata:
      labels:
        app: "{{ .Chart.Name }}"
        release: "{{ .Release.Name }}"
    spec:
      securityContext:
        runAsUser: 10000
        runAsGroup: 10000
        fsGroup: 10000
      containers:
      - name: "{{ .Chart.Name }}"
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: Always
        resources:
{{ toYaml .Values.resources | indent 10 }}
        env:
        - name: GAME_VERSION
          value: {{ .Values.config.gameVersion | squote }}
        - name: GAME_BRANCH
          value: {{ .Values.config.gameBranch | squote }}
        - name: BACKUP_CRON_SCHEDULE
          value: {{ .Values.config.backupCronSchedule | squote }}
        - name: BACKUP_RETENTION_DAYS
          value: {{ .Values.config.backupRetentionDays | squote }}
        {{- range $key, $val := .Values.serverConfig }}
        {{- if not (and (kindIs "string" $val) (eq $val "")) }}
        - name: {{ $key }}
          value: {{ if isString $val }}{{ $val | quote }}{{ else if isBool $val }}{{ $val }}{{ else if isNumber $val }}{{ $val }}{{ end }}
        {{- end }}
        {{- end }}
        ports:
        - name: game-port
          containerPort: {{ .Values.config.gamePort | int }}
          protocol: TCP
        - name: game-port-udp
          containerPort: {{ .Values.config.gamePort | int }}
          protocol: UDP
        volumeMounts:
        - name: server
          mountPath: /home/vintagestory/server
        - name: data
          mountPath: /home/vintagestory/data
{{- if .Values.volumes.backupPVC.enabled }}
        - name: backups
          mountPath: /home/vintagestory/data/Backups
{{- end }}
        securityContext:
          allowPrivilegeEscalation: false
      volumes:
      - name: server
        persistentVolumeClaim:
          claimName: "{{ .Chart.Name }}-server"
      - name: data
        persistentVolumeClaim:
          claimName: "{{ .Chart.Name }}-data"
{{- if .Values.volumes.backupPVC.enabled }}
      - name: backups
        persistentVolumeClaim:
          claimName: "{{ .Chart.Name }}-backups"
{{- end }}
